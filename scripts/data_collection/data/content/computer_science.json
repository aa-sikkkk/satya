
{
    "subject": "Computer Science",
    "grade": 10,
    "topics": [
        {
            "name": "Computer Network",
            "subtopics": [
                {
                    "name": "Computer Network",
                    "concepts": [
                        {
                            "name": "Introduction to Computer Networks",
                            "summary": "A computer network is a system of interconnected computers and devices that can communicate and share resources. Networks enable data sharing, hardware sharing, and communication between devices. The basic components of a network include nodes (computers/devices), transmission media, and network protocols. Networks can be classified based on their size, geographical coverage, and architecture. Local Area Networks (LANs) connect devices within a small area like a school or office, while Wide Area Networks (WANs) connect devices across large geographical areas. Networks use various protocols like TCP/IP to ensure reliable communication. The importance of networks in modern computing cannot be overstated, as they enable resource sharing, communication, and access to information. Key benefits include cost reduction through shared resources, improved communication through email and messaging, centralized data management, and remote access to information. Networks also play a crucial role in business operations, education, and personal communication.",
                            "steps": [
                                "Understand basic networking concepts and terminology",
                                "Learn about different types of networks and their applications",
                                "Study network components and their functions",
                                "Explore network protocols and standards",
                                "Practice network configuration and troubleshooting"
                            ],
                            "questions": [
                                {
                                    "question": "What is a computer network? Explain its importance. [5 marks]",
                                    "acceptable_answers": [
                                        "A computer network is a system of interconnected computers and devices that can communicate and share resources. Importance: 1) Resource sharing (hardware, software, data), 2) Communication (email, messaging), 3) Cost reduction (shared resources), 4) Centralized data management, 5) Remote access to information"
                                    ],
                                    "hints": [
                                        "Think about how networks help in sharing resources",
                                        "Consider both technical and practical benefits"
                                    ]
                                },
                                {
                                    "question": "Differentiate between LAN and WAN. [4 marks]",
                                    "acceptable_answers": [
                                        "LAN (Local Area Network): 1) Covers small geographical area, 2) High speed, 3) Lower cost, 4) Used in homes/schools. WAN (Wide Area Network): 1) Covers large geographical area, 2) Lower speed, 3) Higher cost, 4) Used for internet/global communication"
                                    ],
                                    "hints": [
                                        "Compare their coverage area and speed",
                                        "Think about where each is commonly used"
                                    ]
                                },
                                {
                                    "question": "What are the main components of a computer network? Explain each. [5 marks]",
                                    "acceptable_answers": [
                                        "Main components: 1) Nodes (computers, printers, servers) - devices connected to the network, 2) Transmission media (cables, wireless) - physical or wireless channels for data transfer, 3) Network Interface Card (NIC) - hardware that connects devices to the network, 4) Hub/Switch - central connection point for devices, 5) Router - connects different networks, 6) Protocols - rules for communication"
                                    ],
                                    "hints": [
                                        "Consider both hardware and software components",
                                        "Think about what's needed for devices to communicate"
                                    ]
                                },
                                {
                                    "question": "Explain the advantages and disadvantages of computer networks. [5 marks]",
                                    "acceptable_answers": [
                                        "Advantages: 1) Resource sharing reduces costs, 2) Improved communication and collaboration, 3) Centralized data management, 4) Remote access to information, 5) Increased productivity. Disadvantages: 1) Security risks and threats, 2) High initial setup cost, 3) Requires technical expertise, 4) Network failures can affect all users, 5) Maintenance and management overhead"
                                    ],
                                    "hints": [
                                        "Consider both technical and practical aspects",
                                        "Think about security and cost implications"
                                    ]
                                },
                                {
                                    "question": "What is a protocol in computer networking? Give examples. [4 marks]",
                                    "acceptable_answers": [
                                        "A protocol is a set of rules that govern how devices communicate in a network. Examples: 1) TCP/IP - for internet communication, 2) HTTP - for web browsing, 3) FTP - for file transfer, 4) SMTP - for email, 5) DHCP - for IP address assignment"
                                    ],
                                    "hints": [
                                        "Think about different types of network communication",
                                        "Consider common internet activities"
                                    ]
                                },
                                {
                                    "question": "Explain the role of a router in a computer network. [4 marks]",
                                    "acceptable_answers": [
                                        "Router's role: 1) Connects different networks together, 2) Routes data packets between networks, 3) Determines the best path for data transmission, 4) Provides security through firewall features, 5) Enables internet connectivity"
                                    ],
                                    "hints": [
                                        "Consider how data moves between networks",
                                        "Think about internet connectivity"
                                    ]
                                },
                                {
                                    "question": "What is the difference between a hub and a switch? [4 marks]",
                                    "acceptable_answers": [
                                        "Hub: 1) Broadcasts data to all connected devices, 2) Works at physical layer, 3) Less efficient, 4) Cheaper. Switch: 1) Sends data only to intended device, 2) Works at data link layer, 3) More efficient, 4) More expensive"
                                    ],
                                    "hints": [
                                        "Consider how they handle data transmission",
                                        "Think about efficiency and cost"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of bandwidth in computer networks. [4 marks]",
                                    "acceptable_answers": [
                                        "Bandwidth: 1) Amount of data that can be transmitted in a given time, 2) Measured in bits per second (bps), 3) Higher bandwidth means faster data transfer, 4) Affects network performance, 5) Can be shared among multiple users"
                                    ],
                                    "hints": [
                                        "Think about data transfer speed",
                                        "Consider how it affects network performance"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Internet and Web Technologies",
                            "summary": "The Internet is a global network of networks that connects millions of devices worldwide. It enables communication, information sharing, and access to various services. The World Wide Web (WWW) is a collection of interconnected documents and resources accessible via the Internet. Web technologies include browsers, servers, and protocols that enable access to web content. Key components include URLs (Uniform Resource Locators) for addressing resources, HTTP (Hypertext Transfer Protocol) for communication, HTML (Hypertext Markup Language) for content structure, and CSS (Cascading Style Sheets) for presentation. Web servers host websites and serve content to clients, while web browsers interpret and display web pages. Modern web technologies include JavaScript for interactivity, AJAX for asynchronous communication, and various frameworks for web development. Understanding web technologies is crucial for both using and developing web applications. The Internet also supports various services like email, file transfer, remote access, and streaming media. Security aspects like HTTPS, SSL/TLS, and secure authentication are essential for safe web browsing and transactions.",
                            "steps": [
                                "Understand Internet architecture and components",
                                "Learn about web protocols and standards",
                                "Study web development technologies",
                                "Explore web security concepts",
                                "Practice web browsing and development"
                            ],
                            "questions": [
                                {
                                    "question": "Explain the working of the World Wide Web. [5 marks]",
                                    "acceptable_answers": [
                                        "WWW working: 1) Uses client-server model, 2) Web browsers as clients request pages, 3) Web servers host and serve content, 4) HTTP protocol for communication, 5) HTML for content structure, 6) URLs for resource addressing"
                                    ],
                                    "hints": [
                                        "Consider the request-response cycle",
                                        "Think about how web pages are delivered"
                                    ]
                                },
                                {
                                    "question": "What is the difference between Internet and World Wide Web? [4 marks]",
                                    "acceptable_answers": [
                                        "Internet: 1) Global network of networks, 2) Infrastructure for communication, 3) Supports various services, 4) Physical and logical connections. WWW: 1) Collection of web pages, 2) Service running on Internet, 3) Uses HTTP protocol, 4) Accessed through browsers"
                                    ],
                                    "hints": [
                                        "Consider their scope and purpose",
                                        "Think about their relationship"
                                    ]
                                },
                                {
                                    "question": "Explain the components of a URL with examples. [5 marks]",
                                    "acceptable_answers": [
                                        "URL components: 1) Protocol (http/https), 2) Domain name (www.example.com), 3) Path (/page), 4) Parameters (?id=123), 5) Fragment (#section). Example: https://www.example.com/page?id=123#section"
                                    ],
                                    "hints": [
                                        "Consider how URLs are structured",
                                        "Think about different parts of a web address"
                                    ]
                                },
                                {
                                    "question": "What are the main features of HTML5? [4 marks]",
                                    "acceptable_answers": [
                                        "HTML5 features: 1) Semantic elements (header, nav, article), 2) Multimedia support (audio, video), 3) Canvas for graphics, 4) Local storage, 5) Form improvements, 6) Mobile-friendly design"
                                    ],
                                    "hints": [
                                        "Consider modern web requirements",
                                        "Think about multimedia and interactivity"
                                    ]
                                },
                                {
                                    "question": "Explain the role of CSS in web development. [5 marks]",
                                    "acceptable_answers": [
                                        "CSS role: 1) Controls page layout and design, 2) Separates content from presentation, 3) Enables responsive design, 4) Provides consistent styling, 5) Supports animations and transitions, 6) Improves user experience"
                                    ],
                                    "hints": [
                                        "Consider visual aspects of websites",
                                        "Think about design flexibility"
                                    ]
                                },
                                {
                                    "question": "What is JavaScript and how is it used in web development? [4 marks]",
                                    "acceptable_answers": [
                                        "JavaScript: 1) Client-side scripting language, 2) Adds interactivity to web pages, 3) Handles form validation, 4) Creates dynamic content, 5) Supports AJAX for asynchronous communication"
                                    ],
                                    "hints": [
                                        "Consider user interaction",
                                        "Think about dynamic web features"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of responsive web design. [5 marks]",
                                    "acceptable_answers": [
                                        "Responsive design: 1) Adapts to different screen sizes, 2) Uses flexible layouts, 3) Implements media queries, 4) Optimizes images and content, 5) Improves mobile experience, 6) Follows mobile-first approach"
                                    ],
                                    "hints": [
                                        "Consider different devices",
                                        "Think about user experience"
                                    ]
                                },
                                {
                                    "question": "What are web cookies and how do they work? [4 marks]",
                                    "acceptable_answers": [
                                        "Cookies: 1) Small text files stored on user's computer, 2) Used for session management, 3) Store user preferences, 4) Enable tracking and personalization, 5) Have security and privacy implications"
                                    ],
                                    "hints": [
                                        "Consider user data storage",
                                        "Think about website functionality"
                                    ]
                                },
                                {
                                    "question": "Explain the working of search engines. [5 marks]",
                                    "acceptable_answers": [
                                        "Search engine working: 1) Web crawling to discover pages, 2) Indexing of content, 3) Ranking algorithms, 4) Query processing, 5) Result presentation, 6) Continuous updates and improvements"
                                    ],
                                    "hints": [
                                        "Consider how pages are found",
                                        "Think about result relevance"
                                    ]
                                },
                                {
                                    "question": "What are the common web security threats and their prevention? [5 marks]",
                                    "acceptable_answers": [
                                        "Threats: 1) Cross-site scripting (XSS), 2) SQL injection, 3) Cross-site request forgery (CSRF), 4) Phishing attacks, 5) Man-in-the-middle attacks. Prevention: 1) Input validation, 2) Secure coding practices, 3) HTTPS implementation, 4) Regular updates, 5) Security headers"
                                    ],
                                    "hints": [
                                        "Consider different attack types",
                                        "Think about security measures"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Network Security",
                            "summary": "Network security involves protecting networks and data from unauthorized access, attacks, and damage. It encompasses various measures and practices to ensure the confidentiality, integrity, and availability of network resources. Key concepts include authentication, authorization, encryption, firewalls, and intrusion detection systems. Common security threats include malware, phishing, denial of service attacks, and man-in-the-middle attacks. Security measures include using strong passwords, implementing firewalls, encrypting data, and maintaining regular backups. Network administrators must stay updated with security patches and best practices. Understanding security concepts is crucial for both network administration and safe internet usage. Security protocols like SSL/TLS ensure secure communication, while VPNs provide secure remote access. Regular security audits and monitoring help identify and prevent potential threats.",
                            "steps": [
                                "Learn about security threats and vulnerabilities",
                                "Study security measures and best practices",
                                "Understand encryption and authentication",
                                "Explore security protocols and tools",
                                "Practice security implementation and monitoring"
                            ],
                            "questions": [
                                {
                                    "question": "What are the main types of network security threats? [5 marks]",
                                    "acceptable_answers": [
                                        "Main threats: 1) Malware (viruses, worms, trojans), 2) Phishing attacks, 3) Denial of Service (DoS), 4) Man-in-the-middle attacks, 5) SQL injection, 6) Cross-site scripting (XSS), 7) Password attacks"
                                    ],
                                    "hints": [
                                        "Consider different attack methods",
                                        "Think about potential vulnerabilities"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of encryption in network security. [4 marks]",
                                    "acceptable_answers": [
                                        "Encryption: 1) Converts data into unreadable format, 2) Uses algorithms and keys, 3) Ensures data confidentiality, 4) Types include symmetric and asymmetric, 5) Essential for secure communication"
                                    ],
                                    "hints": [
                                        "Consider data protection",
                                        "Think about secure transmission"
                                    ]
                                },
                                {
                                    "question": "What is a firewall and how does it work? [5 marks]",
                                    "acceptable_answers": [
                                        "Firewall: 1) Network security device, 2) Monitors and controls traffic, 3) Uses rules to allow/block packets, 4) Can be hardware or software, 5) Protects against unauthorized access, 6) Implements security policies"
                                    ],
                                    "hints": [
                                        "Consider traffic control",
                                        "Think about security rules"
                                    ]
                                },
                                {
                                    "question": "Explain the importance of strong passwords. [4 marks]",
                                    "acceptable_answers": [
                                        "Strong passwords: 1) Prevent unauthorized access, 2) Should be complex and unique, 3) Include mix of characters, 4) Regular changes required, 5) Part of security best practices"
                                    ],
                                    "hints": [
                                        "Consider password strength",
                                        "Think about security practices"
                                    ]
                                },
                                {
                                    "question": "What is a VPN and how does it enhance security? [5 marks]",
                                    "acceptable_answers": [
                                        "VPN: 1) Creates secure tunnel for data, 2) Encrypts all traffic, 3) Hides IP address, 4) Enables secure remote access, 5) Protects against eavesdropping, 6) Bypasses geographical restrictions"
                                    ],
                                    "hints": [
                                        "Consider secure remote access",
                                        "Think about data protection"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of two-factor authentication. [4 marks]",
                                    "acceptable_answers": [
                                        "Two-factor authentication: 1) Requires two verification methods, 2) Combines password with second factor, 3) Uses SMS, email, or authenticator apps, 4) Enhances security significantly, 5) Prevents unauthorized access"
                                    ],
                                    "hints": [
                                        "Consider multiple verification steps",
                                        "Think about security layers"
                                    ]
                                },
                                {
                                    "question": "What are the best practices for network security? [5 marks]",
                                    "acceptable_answers": [
                                        "Best practices: 1) Regular updates and patches, 2) Strong password policies, 3) Employee training, 4) Regular backups, 5) Security monitoring, 6) Access control, 7) Incident response plan"
                                    ],
                                    "hints": [
                                        "Consider comprehensive security",
                                        "Think about preventive measures"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of intrusion detection systems. [4 marks]",
                                    "acceptable_answers": [
                                        "IDS: 1) Monitors network traffic, 2) Detects suspicious activities, 3) Alerts administrators, 4) Can be network or host-based, 5) Helps prevent security breaches"
                                    ],
                                    "hints": [
                                        "Consider monitoring and detection",
                                        "Think about security alerts"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Types of Transmission Media",
                            "summary": "Transmission media are the physical or wireless channels through which data is transmitted in a network. They are crucial for establishing communication between network devices. There are two main types: Wired (Guided) Media and Wireless (Unguided) Media. Wired media includes twisted pair cables (UTP and STP), coaxial cables, and fiber optic cables. Each type has specific characteristics, advantages, and applications. Twisted pair cables are commonly used in LANs due to their cost-effectiveness and ease of installation. Coaxial cables provide better shielding and are used in cable TV and broadband internet. Fiber optic cables offer the highest bandwidth and are used for long-distance communication. Wireless media includes radio waves, microwaves, and infrared signals. Radio waves are used in Wi-Fi and cellular networks, microwaves for point-to-point communication, and infrared for short-range communication. The choice of transmission media depends on factors like distance, bandwidth requirements, cost, and environmental conditions. Understanding different transmission media is essential for network design and implementation.",
                            "steps": [
                                "Study different types of wired media and their characteristics",
                                "Learn about wireless transmission methods and their applications",
                                "Compare advantages and disadvantages of each type",
                                "Understand practical applications and limitations",
                                "Practice media selection for different scenarios"
                            ],
                            "questions": [
                                {
                                    "question": "Compare and contrast wired and wireless transmission media. [5 marks]",
                                    "acceptable_answers": [
                                        "Wired Media: 1) Physical connection required, 2) Better security, 3) Higher reliability, 4) Limited mobility, 5) Faster data transfer. Wireless Media: 1) No physical connection needed, 2) More flexible and mobile, 3) Easier installation, 4) More susceptible to interference, 5) Security concerns"
                                    ],
                                    "hints": [
                                        "Consider factors like security, reliability, and mobility",
                                        "Think about practical applications and limitations"
                                    ]
                                },
                                {
                                    "question": "Explain the types of twisted pair cables and their uses. [4 marks]",
                                    "acceptable_answers": [
                                        "Types: 1) UTP (Unshielded Twisted Pair) - common in LANs, 2) STP (Shielded Twisted Pair) - better interference protection. Uses: 1) Ethernet networks, 2) Telephone lines, 3) DSL connections, 4) Security systems"
                                    ],
                                    "hints": [
                                        "Consider their construction and shielding",
                                        "Think about common network applications"
                                    ]
                                },
                                {
                                    "question": "What are the advantages of fiber optic cables? [5 marks]",
                                    "acceptable_answers": [
                                        "Advantages: 1) Highest bandwidth and speed, 2) No electromagnetic interference, 3) Long-distance transmission, 4) Secure data transmission, 5) Lightweight and thin, 6) No signal degradation"
                                    ],
                                    "hints": [
                                        "Consider technical and practical benefits",
                                        "Think about long-distance communication"
                                    ]
                                },
                                {
                                    "question": "Explain the working principle of fiber optic cables. [4 marks]",
                                    "acceptable_answers": [
                                        "Working principle: 1) Uses light signals instead of electrical signals, 2) Light travels through glass/plastic core, 3) Total internal reflection keeps light in core, 4) Light signals represent binary data, 5) Photodetector converts light back to electrical signals"
                                    ],
                                    "hints": [
                                        "Think about how light travels in the cable",
                                        "Consider the conversion of signals"
                                    ]
                                },
                                {
                                    "question": "What are the different types of wireless transmission media? [5 marks]",
                                    "acceptable_answers": [
                                        "Types: 1) Radio waves - used in Wi-Fi and cellular networks, 2) Microwaves - for point-to-point communication, 3) Infrared - short-range communication, 4) Bluetooth - personal area networks, 5) Satellite - global communication"
                                    ],
                                    "hints": [
                                        "Consider different frequency ranges",
                                        "Think about common wireless technologies"
                                    ]
                                },
                                {
                                    "question": "Compare coaxial cable and fiber optic cable. [4 marks]",
                                    "acceptable_answers": [
                                        "Coaxial: 1) Uses electrical signals, 2) Moderate bandwidth, 3) Susceptible to interference, 4) Cheaper. Fiber Optic: 1) Uses light signals, 2) Very high bandwidth, 3) No interference, 4) More expensive"
                                    ],
                                    "hints": [
                                        "Consider signal type and bandwidth",
                                        "Think about cost and performance"
                                    ]
                                },
                                {
                                    "question": "What factors should be considered when choosing transmission media? [5 marks]",
                                    "acceptable_answers": [
                                        "Factors: 1) Distance of transmission, 2) Required bandwidth, 3) Cost considerations, 4) Environmental conditions, 5) Security requirements, 6) Installation complexity"
                                    ],
                                    "hints": [
                                        "Consider both technical and practical aspects",
                                        "Think about specific use cases"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Network Topologies",
                            "summary": "Network topology refers to the physical or logical arrangement of nodes in a network. It defines how devices are connected and how data flows between them. Common topologies include Bus, Star, Ring, Tree, and Mesh. Each topology has its own advantages and disadvantages in terms of cost, reliability, and scalability. Bus topology uses a single cable (backbone) to connect all devices, making it simple and cost-effective but vulnerable to single point of failure. Star topology connects all devices to a central hub, making it easy to manage but dependent on the hub. Ring topology connects devices in a circular manner, providing equal access but vulnerable to single point of failure. Tree topology combines bus and star topologies, offering good scalability but complex management. Mesh topology connects devices directly to each other, providing redundancy but requiring more cabling. The choice of topology depends on factors like cost, reliability requirements, and network size. Understanding different topologies is crucial for network design and troubleshooting.",
                            "steps": [
                                "Learn about different network topologies",
                                "Understand their characteristics and applications",
                                "Compare advantages and disadvantages",
                                "Study real-world implementations",
                                "Practice topology design and troubleshooting"
                            ],
                            "questions": [
                                {
                                    "question": "Explain Star topology with its advantages and disadvantages. [5 marks]",
                                    "acceptable_answers": [
                                        "Star topology connects all devices to a central hub. Advantages: 1) Easy to manage, 2) Fault finding is simple, 3) Adding new devices is easy, 4) Failure of one device doesn't affect others. Disadvantages: 1) Dependent on central hub, 2) More expensive, 3) Requires more cabling, 4) If hub fails, whole network fails"
                                    ],
                                    "hints": [
                                        "Consider how devices are connected",
                                        "Think about what happens if the central device fails"
                                    ]
                                },
                                {
                                    "question": "Draw and explain Bus topology. [4 marks]",
                                    "acceptable_answers": [
                                        "Bus topology uses a single cable (backbone) to connect all devices. Advantages: 1) Simple and cheap, 2) Less cabling needed, 3) Easy to extend. Disadvantages: 1) If main cable fails, whole network fails, 2) Difficult to troubleshoot, 3) Performance decreases with more devices"
                                    ],
                                    "hints": [
                                        "Imagine a single cable connecting all computers",
                                        "Consider what happens if the main cable breaks"
                                    ]
                                },
                                {
                                    "question": "Compare Ring and Mesh topologies. [5 marks]",
                                    "acceptable_answers": [
                                        "Ring Topology: 1) Devices connected in circular manner, 2) Equal access to network, 3) Simple to implement, 4) Single point of failure. Mesh Topology: 1) Devices directly connected to each other, 2) Multiple paths for data, 3) Highly reliable, 4) Expensive to implement, 5) Complex to manage"
                                    ],
                                    "hints": [
                                        "Consider how devices are connected in each",
                                        "Think about reliability and cost"
                                    ]
                                },
                                {
                                    "question": "What is Tree topology? Explain its features. [4 marks]",
                                    "acceptable_answers": [
                                        "Tree topology combines bus and star topologies. Features: 1) Hierarchical structure, 2) Easy to extend, 3) Good for large networks, 4) Centralized management, 5) Point-to-point connection between levels"
                                    ],
                                    "hints": [
                                        "Think about how it combines other topologies",
                                        "Consider its hierarchical nature"
                                    ]
                                },
                                {
                                    "question": "Which topology would you choose for a school computer lab? Justify your answer. [5 marks]",
                                    "acceptable_answers": [
                                        "Star topology would be best for a school lab because: 1) Easy to manage and maintain, 2) Simple to add or remove computers, 3) Fault finding is easy, 4) Failure of one computer doesn't affect others, 5) Centralized control through hub/switch"
                                    ],
                                    "hints": [
                                        "Consider ease of management",
                                        "Think about reliability and maintenance"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of hybrid topology with an example. [4 marks]",
                                    "acceptable_answers": [
                                        "Hybrid topology combines two or more different topologies. Example: A network with star topology in each department connected through a bus topology. Benefits: 1) Flexible and scalable, 2) Can be customized for specific needs, 3) Combines advantages of different topologies, 4) Better fault tolerance"
                                    ],
                                    "hints": [
                                        "Think about combining different topologies",
                                        "Consider practical applications"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Network Protocols and Standards",
                            "summary": "Network protocols are sets of rules and standards that govern how devices communicate in a network. They ensure reliable and efficient data transmission between different devices and systems. The TCP/IP protocol suite is the fundamental protocol of the internet, consisting of multiple layers: Application, Transport, Internet, and Network Access. Each layer has specific protocols and functions. Common protocols include HTTP for web browsing, FTP for file transfer, SMTP for email, and DNS for domain name resolution. Network standards ensure compatibility and interoperability between different network devices and systems. Organizations like IEEE, ISO, and IETF develop and maintain these standards. Understanding protocols and standards is crucial for network administration, troubleshooting, and security. Protocols can be connection-oriented (like TCP) or connectionless (like UDP), each suitable for different types of applications. Security protocols like SSL/TLS ensure secure communication over networks.",
                            "steps": [
                                "Study the TCP/IP protocol suite and its layers",
                                "Learn about common application layer protocols",
                                "Understand transport layer protocols (TCP and UDP)",
                                "Explore network security protocols",
                                "Practice protocol analysis and troubleshooting"
                            ],
                            "questions": [
                                {
                                    "question": "Explain the TCP/IP protocol suite and its layers. [5 marks]",
                                    "acceptable_answers": [
                                        "TCP/IP layers: 1) Application Layer (HTTP, FTP, SMTP), 2) Transport Layer (TCP, UDP), 3) Internet Layer (IP, ICMP), 4) Network Access Layer (Ethernet, Wi-Fi). Each layer has specific functions and protocols for data transmission"
                                    ],
                                    "hints": [
                                        "Consider the flow of data through layers",
                                        "Think about different types of protocols at each layer"
                                    ]
                                },
                                {
                                    "question": "Differentiate between TCP and UDP protocols. [4 marks]",
                                    "acceptable_answers": [
                                        "TCP: 1) Connection-oriented, 2) Reliable delivery, 3) Flow control, 4) Used for web, email. UDP: 1) Connectionless, 2) Faster but unreliable, 3) No flow control, 4) Used for streaming, gaming"
                                    ],
                                    "hints": [
                                        "Consider reliability vs speed",
                                        "Think about different applications"
                                    ]
                                },
                                {
                                    "question": "What is the role of HTTP in web communication? [4 marks]",
                                    "acceptable_answers": [
                                        "HTTP role: 1) Client-server protocol for web, 2) Defines how web browsers and servers communicate, 3) Handles web page requests and responses, 4) Supports different methods (GET, POST, etc.)"
                                    ],
                                    "hints": [
                                        "Think about web browsing",
                                        "Consider request-response cycle"
                                    ]
                                },
                                {
                                    "question": "Explain the working of DNS protocol. [5 marks]",
                                    "acceptable_answers": [
                                        "DNS working: 1) Converts domain names to IP addresses, 2) Uses hierarchical structure, 3) Involves multiple servers (root, TLD, authoritative), 4) Caches results for faster lookup, 5) Supports different record types (A, CNAME, MX)"
                                    ],
                                    "hints": [
                                        "Consider name resolution process",
                                        "Think about different types of DNS servers"
                                    ]
                                },
                                {
                                    "question": "What are the common email protocols? Explain their functions. [4 marks]",
                                    "acceptable_answers": [
                                        "Email protocols: 1) SMTP - sending email, 2) POP3 - downloading email, 3) IMAP - managing email on server, 4) Each protocol has specific functions in email communication"
                                    ],
                                    "hints": [
                                        "Consider different aspects of email",
                                        "Think about server-client interaction"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of protocol layering. [5 marks]",
                                    "acceptable_answers": [
                                        "Protocol layering: 1) Divides network functions into layers, 2) Each layer has specific responsibilities, 3) Layers communicate with adjacent layers, 4) Provides modularity and flexibility, 5) Makes troubleshooting easier"
                                    ],
                                    "hints": [
                                        "Consider the benefits of layering",
                                        "Think about how layers interact"
                                    ]
                                },
                                {
                                    "question": "What is the role of SSL/TLS in network security? [4 marks]",
                                    "acceptable_answers": [
                                        "SSL/TLS role: 1) Provides secure communication, 2) Encrypts data transmission, 3) Authenticates servers and clients, 4) Ensures data integrity, 5) Used in HTTPS for secure web browsing"
                                    ],
                                    "hints": [
                                        "Consider security aspects",
                                        "Think about web security"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Network Implementation",
                            "concepts": [
                                {
                                    "name": "Network Setup and Management",
                                    "summary": "Network implementation in Nepal's context involves setting up and managing computer networks in schools, colleges, and businesses. This includes understanding local infrastructure, internet service providers (ISPs) like Nepal Telecom, WorldLink, and Vianet, and implementing appropriate network solutions. Key aspects include network design, hardware selection, configuration, and maintenance. Understanding Nepal's network infrastructure is crucial for effective implementation. The country's network setup often involves dealing with challenges like power outages, limited bandwidth, and geographical constraints. Network implementation must consider local requirements, budget constraints, and future scalability.",
                                    "steps": [
                                        "Understand Nepal's network infrastructure",
                                        "Learn about local ISPs and their services",
                                        "Study network hardware and components",
                                        "Practice network configuration",
                                        "Implement security measures",
                                        "Monitor and maintain networks",
                                        "Troubleshoot common issues"
                                    ],
                                    "questions": [
                                        {
                                            "question": "Design a network setup for a school in Kathmandu with 50 computers, considering local infrastructure and challenges. [5 marks]",
                                            "acceptable_answers": [
                                                "School Network Design:\n\n1) Internet Connection:\n   - Primary: Fiber connection from WorldLink/Nepal Telecom\n   - Backup: 4G/LTE connection for power outages\n   - Bandwidth: 50 Mbps shared\n\n2) Network Hardware:\n   - 2-3 24-port switches for computer labs\n   - Router with load balancing\n   - UPS for network equipment\n   - Wireless access points for staff rooms\n\n3) Network Structure:\n   - Star topology for reliability\n   - VLANs for different departments\n   - Bandwidth management for fair usage\n\n4) Security Measures:\n   - Firewall configuration\n   - Content filtering for students\n   - User authentication system\n   - Regular security updates\n\n5) Power Management:\n   - UPS for network equipment\n   - Backup power for servers\n   - Power monitoring system\n\n6) Maintenance Plan:\n   - Regular backup system\n   - Network monitoring tools\n   - Power backup solutions\n   - Emergency response plan"
                                            ],
                                            "hints": [
                                                "Consider power backup requirements",
                                                "Plan for bandwidth management",
                                                "Include security measures",
                                                "Think about scalability"
                                            ]
                                        },
                                        {
                                            "question": "Explain the steps to set up a small office network in Nepal, including internet connection and security measures. [5 marks]",
                                            "acceptable_answers": [
                                                "Office Network Setup Steps:\n\n1) Internet Connection:\n   - Choose reliable ISP (WorldLink/Vianet)\n   - Select appropriate bandwidth package\n   - Set up backup connection\n   - Configure load balancing\n\n2) Network Hardware:\n   - Router with firewall capabilities\n   - Switch for wired connections\n   - Wireless access points\n   - UPS for power backup\n\n3) Network Configuration:\n   - IP address planning\n   - DHCP setup\n   - DNS configuration\n   - Bandwidth management\n\n4) Security Implementation:\n   - Firewall rules\n   - User authentication\n   - Access control lists\n   - Regular security updates\n\n5) Maintenance:\n   - Network monitoring\n   - Regular backups\n   - Performance optimization\n   - Troubleshooting procedures"
                                            ],
                                            "hints": [
                                                "Consider local ISP options",
                                                "Include power backup solutions",
                                                "Plan for security measures",
                                                "Think about maintenance"
                                            ]
                                        },
                                        {
                                            "question": "Describe the process of implementing a wireless network in a college campus in Nepal, including challenges and solutions. [5 marks]",
                                            "acceptable_answers": [
                                                "Wireless Network Implementation:\n\n1) Site Survey:\n   - Building layout analysis\n   - Signal coverage planning\n   - Interference assessment\n   - Access point placement\n\n2) Hardware Selection:\n   - Enterprise-grade access points\n   - PoE switches\n   - Controller for management\n   - Power backup systems\n\n3) Network Design:\n   - SSID planning for different user groups\n   - Channel planning to avoid interference\n   - Bandwidth allocation\n   - Coverage optimization\n\n4) Security Measures:\n   - WPA2-Enterprise authentication\n   - User access control\n   - Traffic monitoring\n   - Regular security audits\n\n5) Challenges and Solutions:\n   - Power issues: UPS and backup systems\n   - Bandwidth limitations: Traffic shaping\n   - Security concerns: Strong authentication\n   - Maintenance: Regular monitoring"
                                            ],
                                            "hints": [
                                                "Consider power backup needs",
                                                "Plan for user authentication",
                                                "Include security measures",
                                                "Think about maintenance"
                                            ]
                                        },
                                        {
                                            "question": "Explain the implementation of a network security system for a bank in Nepal, considering local regulations and requirements. [5 marks]",
                                            "acceptable_answers": [
                                                "Bank Network Security Implementation:\n\n1) Network Architecture:\n   - Segmented network design\n   - DMZ for public services\n   - Internal network isolation\n   - Backup systems\n\n2) Security Measures:\n   - Firewall configuration\n   - Intrusion Detection System\n   - VPN for remote access\n   - Access control lists\n\n3) Authentication System:\n   - Multi-factor authentication\n   - Role-based access control\n   - Password policies\n   - Session management\n\n4) Monitoring and Logging:\n   - Security event monitoring\n   - Traffic analysis\n   - User activity logging\n   - Regular security audits\n\n5) Compliance and Regulations:\n   - NRB guidelines compliance\n   - Data protection measures\n   - Regular security assessments\n   - Incident response plan"
                                            ],
                                            "hints": [
                                                "Consider NRB regulations",
                                                "Include multi-layer security",
                                                "Plan for incident response",
                                                "Think about compliance"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Programming Fundamentals",
            "subtopics": [
                {
                    "name": "Programming Basics",
                    "concepts": [
                        {
                            "name": "Introduction to Programming",
                            "summary": "Programming is the process of creating a set of instructions that tell a computer how to perform a task. It involves problem-solving, algorithm design, and coding. Programming languages are tools used to communicate with computers. They can be high-level (like Python, Java) or low-level (like Assembly). Key programming concepts include variables, data types, operators, control structures, functions, and arrays. Understanding these fundamentals is crucial for developing software applications. Programming follows a systematic approach: problem analysis, algorithm design, coding, testing, and debugging. Good programming practices include writing clear, maintainable code, using proper documentation, and following coding standards. Programming is essential in various fields like software development, web development, data science, and artificial intelligence.",
                            "steps": [
                                "Learn basic programming concepts",
                                "Understand problem-solving techniques",
                                "Study different programming languages",
                                "Practice coding and debugging",
                                "Develop programming best practices"
                            ],
                            "questions": [
                                {
                                    "question": "What is programming? Explain its importance. [5 marks]",
                                    "acceptable_answers": [
                                        "Programming: 1) Process of creating computer instructions, 2) Solves problems through algorithms, 3) Enables software development, 4) Automates tasks, 5) Drives technological innovation. Importance: 1) Creates software applications, 2) Solves real-world problems, 3) Enables automation, 4) Supports digital transformation, 5) Provides career opportunities"
                                    ],
                                    "hints": [
                                        "Consider both definition and applications",
                                        "Think about real-world impact"
                                    ]
                                },
                                {
                                    "question": "Differentiate between high-level and low-level programming languages. [4 marks]",
                                    "acceptable_answers": [
                                        "High-level: 1) Easy to read and write, 2) Platform independent, 3) Requires compiler/interpreter, 4) Examples: Python, Java. Low-level: 1) Close to machine language, 2) Platform dependent, 3) Direct execution, 4) Examples: Assembly, Machine code"
                                    ],
                                    "hints": [
                                        "Consider readability and execution",
                                        "Think about abstraction level"
                                    ]
                                },
                                {
                                    "question": "Explain the basic elements of a programming language. [5 marks]",
                                    "acceptable_answers": [
                                        "Basic elements: 1) Variables - store data, 2) Data types - define data nature, 3) Operators - perform operations, 4) Control structures - manage flow, 5) Functions - reusable code blocks, 6) Arrays - store multiple values"
                                    ],
                                    "hints": [
                                        "Consider fundamental building blocks",
                                        "Think about their purposes"
                                    ]
                                },
                                {
                                    "question": "What is an algorithm? Explain with an example. [4 marks]",
                                    "acceptable_answers": [
                                        "Algorithm: 1) Step-by-step problem-solving procedure, 2) Clear and unambiguous, 3) Finite and effective, 4) Example: Finding maximum number: a) Start, b) Read numbers, c) Compare and find maximum, d) Display result, e) Stop"
                                    ],
                                    "hints": [
                                        "Consider step-by-step process",
                                        "Think about problem-solving"
                                    ]
                                },
                                {
                                    "question": "Explain the programming development cycle. [5 marks]",
                                    "acceptable_answers": [
                                        "Development cycle: 1) Problem analysis - understand requirements, 2) Algorithm design - plan solution, 3) Coding - implement solution, 4) Testing - verify correctness, 5) Debugging - fix errors, 6) Documentation - maintain records"
                                    ],
                                    "hints": [
                                        "Consider systematic approach",
                                        "Think about development stages"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "QBASIC Programming",
                    "concepts": [
                        {
                            "name": "QBASIC Fundamentals",
                            "summary": "QBASIC is a simple programming language designed for beginners, widely used in Nepali schools for teaching programming concepts. It uses English-like commands and provides an integrated development environment. Key features include simple syntax, built-in graphics capabilities, and immediate feedback. QBASIC is particularly useful for learning programming concepts and creating simple applications. The language includes commands for input/output operations, mathematical calculations, string manipulation, and graphics. Understanding QBASIC helps build a foundation for learning more advanced programming languages. The integrated development environment provides tools for editing, debugging, and running programs.",
                            "steps": [
                                "Learn QBASIC syntax and basic commands",
                                "Practice input/output operations",
                                "Study control structures (IF-THEN, FOR-NEXT, DO-LOOP)",
                                "Learn about arrays and string manipulation",
                                "Practice graphics and sound commands",
                                "Create simple applications like calculators and games"
                            ],
                            "questions": [
                                {
                                    "question": "Write a QBASIC program to create a simple calculator that can perform basic arithmetic operations. [5 marks]",
                                    "acceptable_answers": [
                                        "CLS\nPRINT \"Simple Calculator\"\nPRINT \"1. Addition\"\nPRINT \"2. Subtraction\"\nPRINT \"3. Multiplication\"\nPRINT \"4. Division\"\nINPUT \"Enter your choice (1-4): \"; choice\nINPUT \"Enter first number: \"; a\nINPUT \"Enter second number: \"; b\nSELECT CASE choice\n    CASE 1\n        result = a + b\n        PRINT a; \" + \"; b; \" = \"; result\n    CASE 2\n        result = a - b\n        PRINT a; \" - \"; b; \" = \"; result\n    CASE 3\n        result = a * b\n        PRINT a; \" * \"; b; \" = \"; result\n    CASE 4\n        IF b <> 0 THEN\n            result = a / b\n            PRINT a; \" / \"; b; \" = \"; result\n        ELSE\n            PRINT \"Error: Division by zero\"\n        END IF\n    CASE ELSE\n        PRINT \"Invalid choice\"\nEND SELECT\nEND"
                                    ],
                                    "hints": [
                                        "Use SELECT CASE for different operations",
                                        "Handle division by zero error",
                                        "Use proper input/output statements"
                                    ]
                                },
                                {
                                    "question": "Write a QBASIC program to create a student record management system that can store and display student information. [5 marks]",
                                    "acceptable_answers": [
                                        "CLS\nDIM name$(10), class(10), roll(10)\nPRINT \"Student Record Management System\"\nPRINT \"1. Add Record\"\nPRINT \"2. Display Records\"\nPRINT \"3. Exit\"\nDO\n    INPUT \"Enter your choice (1-3): \"; choice\n    SELECT CASE choice\n        CASE 1\n            INPUT \"Enter student name: \"; name$(i)\n            INPUT \"Enter class: \"; class(i)\n            INPUT \"Enter roll number: \"; roll(i)\n            i = i + 1\n        CASE 2\n            PRINT \"\\nStudent Records:\"\n            FOR j = 0 TO i - 1\n                PRINT \"Name: \"; name$(j)\n                PRINT \"Class: \"; class(j)\n                PRINT \"Roll: \"; roll(j)\n                PRINT \"-------------------\"\n            NEXT j\n        CASE 3\n            EXIT DO\n        CASE ELSE\n            PRINT \"Invalid choice\"\n    END SELECT\nLOOP\nEND"
                                    ],
                                    "hints": [
                                        "Use arrays to store multiple records",
                                        "Implement a menu-driven interface",
                                        "Use proper formatting for display"
                                    ]
                                },
                                {
                                    "question": "Write a QBASIC program to create a simple quiz game with multiple-choice questions. [5 marks]",
                                    "acceptable_answers": [
                                        "CLS\nDIM question$(5), option$(5, 4), answer(5)\nscore = 0\n' Set questions and answers\nquestion$(1) = \"What is the capital of Nepal?\"\noption$(1, 1) = \"A. Kathmandu\"\noption$(1, 2) = \"B. Pokhara\"\noption$(1, 3) = \"C. Lalitpur\"\noption$(1, 4) = \"D. Bhaktapur\"\nanswer(1) = 1\n' Add more questions here\nFOR i = 1 TO 5\n    CLS\n    PRINT \"Question \"; i\n    PRINT question$(i)\n    FOR j = 1 TO 4\n        PRINT option$(i, j)\n    NEXT j\n    INPUT \"Enter your answer (1-4): \"; userAnswer\n    IF userAnswer = answer(i) THEN\n        score = score + 1\n        PRINT \"Correct!\"\n    ELSE\n        PRINT \"Wrong!\"\n    END IF\n    SLEEP 2\nNEXT i\nPRINT \"\\nYour final score: \"; score; \" out of 5\"\nEND"
                                    ],
                                    "hints": [
                                        "Use arrays to store questions and options",
                                        "Implement scoring system",
                                        "Add proper feedback for answers"
                                    ]
                                },
                                {
                                    "question": "Write a QBASIC program to create a simple graphics animation. [4 marks]",
                                    "acceptable_answers": [
                                        "CLS\nSCREEN 1\nCOLOR 1\nFOR i = 1 TO 10\n    CIRCLE (160, 100), i * 10\n    SLEEP 1\nNEXT i\nFOR i = 10 TO 1 STEP -1\n    CIRCLE (160, 100), i * 10\n    SLEEP 1\nNEXT i\nEND"
                                    ],
                                    "hints": [
                                        "Use SCREEN statement for graphics mode",
                                        "Use CIRCLE command for drawing",
                                        "Add SLEEP for animation effect"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "C Programming",
                    "concepts": [
                        {
                            "name": "C Programming Fundamentals",
                            "summary": "C is a powerful programming language widely used in Nepal for system programming and application development. It provides low-level access to memory and hardware, making it essential for understanding computer architecture. Key concepts include pointers, memory management, and structured programming. C is particularly important for Grade 10 students as it helps build strong programming fundamentals. The language emphasizes efficiency and control over hardware resources. Understanding C programming is crucial for system-level programming and learning other languages. C programs are compiled into machine code for direct execution, making them fast and efficient. The language includes features for file handling, dynamic memory allocation, and modular programming.",
                            "steps": [
                                "Learn C syntax and basic structure",
                                "Understand variables, data types, and operators",
                                "Master control structures (if-else, loops)",
                                "Learn about functions and arrays",
                                "Study pointers and memory management",
                                "Practice file handling and structures",
                                "Create complete applications"
                            ],
                            "questions": [
                                {
                                    "question": "Write a C program to find the factorial of a number. [4 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\nint main() {\n    int n, fact = 1;\n    printf(\"Enter a number: \");\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n        fact *= i;\n    printf(\"Factorial is %d\", fact);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use a loop to multiply numbers from 1 to n",
                                        "Initialize the factorial variable to 1"
                                    ]
                                },
                                {
                                    "question": "Write a C program to check if a number is palindrome or not. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\nint main() {\n    int n, rev = 0, temp;\n    printf(\"Enter a number: \");\n    scanf(\"%d\", &n);\n    temp = n;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(n == rev)\n        printf(\"%d is palindrome\", n);\n    else\n        printf(\"%d is not palindrome\", n);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Reverse the number and compare with original",
                                        "Use modulo operator to get last digit"
                                    ]
                                },
                                {
                                    "question": "Write a C program to implement a simple calculator. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\nint main() {\n    char op;\n    float a, b;\n    printf(\"Enter operator (+, -, *, /): \");\n    scanf(\"%c\", &op);\n    printf(\"Enter two numbers: \");\n    scanf(\"%f %f\", &a, &b);\n    switch(op) {\n        case '+': printf(\"%.1f + %.1f = %.1f\", a, b, a+b); break;\n        case '-': printf(\"%.1f - %.1f = %.1f\", a, b, a-b); break;\n        case '*': printf(\"%.1f * %.1f = %.1f\", a, b, a*b); break;\n        case '/': printf(\"%.1f / %.1f = %.1f\", a, b, a/b); break;\n        default: printf(\"Invalid operator\");\n    }\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use switch statement for different operations",
                                        "Handle division by zero case"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a student management system that can add, display, and search student records. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\n#include <string.h>\n#define MAX 100\n\nstruct Student {\n    char name[50];\n    int roll;\n    float marks;\n};\n\nstruct Student students[MAX];\nint count = 0;\n\nvoid addStudent() {\n    if(count < MAX) {\n        printf(\"\\nEnter student details:\\n\");\n        printf(\"Name: \");\n        scanf(\"%s\", students[count].name);\n        printf(\"Roll: \");\n        scanf(\"%d\", &students[count].roll);\n        printf(\"Marks: \");\n        scanf(\"%f\", &students[count].marks);\n        count++;\n        printf(\"Record added successfully!\\n\");\n    } else {\n        printf(\"Database full!\\n\");\n    }\n}\n\nvoid displayAll() {\n    printf(\"\\nStudent Records:\\n\");\n    printf(\"Name\\tRoll\\tMarks\\n\");\n    for(int i = 0; i < count; i++) {\n        printf(\"%s\\t%d\\t%.2f\\n\", students[i].name, students[i].roll, students[i].marks);\n    }\n}\n\nvoid searchStudent() {\n    int roll;\n    printf(\"\\nEnter roll number to search: \");\n    scanf(\"%d\", &roll);\n    for(int i = 0; i < count; i++) {\n        if(students[i].roll == roll) {\n            printf(\"\\nRecord found!\\n\");\n            printf(\"Name: %s\\n\", students[i].name);\n            printf(\"Roll: %d\\n\", students[i].roll);\n            printf(\"Marks: %.2f\\n\", students[i].marks);\n            return;\n        }\n    }\n    printf(\"Record not found!\\n\");\n}\n\nint main() {\n    int choice;\n    do {\n        printf(\"\\nStudent Management System\\n\");\n        printf(\"1. Add Student\\n\");\n        printf(\"2. Display All\\n\");\n        printf(\"3. Search Student\\n\");\n        printf(\"4. Exit\\n\");\n        printf(\"Enter your choice: \");\n        scanf(\"%d\", &choice);\n        switch(choice) {\n            case 1: addStudent(); break;\n            case 2: displayAll(); break;\n            case 3: searchStudent(); break;\n            case 4: printf(\"Thank you!\\n\"); break;\n            default: printf(\"Invalid choice!\\n\");\n        }\n    } while(choice != 4);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use structures to store student data",
                                        "Implement menu-driven interface",
                                        "Use arrays to store multiple records",
                                        "Include search functionality"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a simple banking system with deposit, withdrawal, and balance check features. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\n\nstruct Account {\n    int accountNumber;\n    char name[50];\n    float balance;\n};\n\nvoid deposit(struct Account *acc) {\n    float amount;\n    printf(\"\\nEnter amount to deposit: \");\n    scanf(\"%f\", &amount);\n    if(amount > 0) {\n        acc->balance += amount;\n        printf(\"Deposit successful! New balance: %.2f\\n\", acc->balance);\n    } else {\n        printf(\"Invalid amount!\\n\");\n    }\n}\n\nvoid withdraw(struct Account *acc) {\n    float amount;\n    printf(\"\\nEnter amount to withdraw: \");\n    scanf(\"%f\", &amount);\n    if(amount > 0 && amount <= acc->balance) {\n        acc->balance -= amount;\n        printf(\"Withdrawal successful! New balance: %.2f\\n\", acc->balance);\n    } else {\n        printf(\"Invalid amount or insufficient balance!\\n\");\n    }\n}\n\nvoid checkBalance(struct Account *acc) {\n    printf(\"\\nAccount Holder: %s\\n\", acc->name);\n    printf(\"Account Number: %d\\n\", acc->accountNumber);\n    printf(\"Current Balance: %.2f\\n\", acc->balance);\n}\n\nint main() {\n    struct Account acc = {1001, \"Ram Sharma\", 5000.0};\n    int choice;\n    do {\n        printf(\"\\nBanking System\\n\");\n        printf(\"1. Deposit\\n\");\n        printf(\"2. Withdraw\\n\");\n        printf(\"3. Check Balance\\n\");\n        printf(\"4. Exit\\n\");\n        printf(\"Enter your choice: \");\n        scanf(\"%d\", &choice);\n        switch(choice) {\n            case 1: deposit(&acc); break;\n            case 2: withdraw(&acc); break;\n            case 3: checkBalance(&acc); break;\n            case 4: printf(\"Thank you!\\n\"); break;\n            default: printf(\"Invalid choice!\\n\");\n        }\n    } while(choice != 4);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use structures for account data",
                                        "Implement pointer-based functions",
                                        "Include balance validation",
                                        "Add proper error handling"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a simple quiz game with multiple-choice questions and score tracking. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <time.h>\n\nstruct Question {\n    char question[200];\n    char options[4][100];\n    int correctAnswer;\n};\n\nvoid initializeQuestions(struct Question *q) {\n    strcpy(q[0].question, \"What is the capital of Nepal?\");\n    strcpy(q[0].options[0], \"A. Kathmandu\");\n    strcpy(q[0].options[1], \"B. Pokhara\");\n    strcpy(q[0].options[2], \"C. Lalitpur\");\n    strcpy(q[0].options[3], \"D. Bhaktapur\");\n    q[0].correctAnswer = 0;\n    \n    // Add more questions here\n}\n\nvoid playQuiz(struct Question *q, int numQuestions) {\n    int score = 0;\n    int answer;\n    \n    for(int i = 0; i < numQuestions; i++) {\n        printf(\"\\nQuestion %d: %s\\n\", i+1, q[i].question);\n        for(int j = 0; j < 4; j++) {\n            printf(\"%s\\n\", q[i].options[j]);\n        }\n        printf(\"\\nEnter your answer (1-4): \");\n        scanf(\"%d\", &answer);\n        \n        if(answer-1 == q[i].correctAnswer) {\n            printf(\"Correct!\\n\");\n            score++;\n        } else {\n            printf(\"Wrong! Correct answer was: %s\\n\", q[i].options[q[i].correctAnswer]);\n        }\n    }\n    \n    printf(\"\\nQuiz completed! Your score: %d/%d\\n\", score, numQuestions);\n}\n\nint main() {\n    struct Question questions[5];\n    initializeQuestions(questions);\n    printf(\"Welcome to the Quiz Game!\\n\");\n    playQuiz(questions, 1); // Start with 1 question, add more as needed\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use structures for questions and options",
                                        "Implement scoring system",
                                        "Add proper feedback for answers",
                                        "Include Nepal-specific questions"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a simple file management system that can create, read, and append to files. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\n#include <string.h>\n\nvoid createFile() {\n    FILE *fp;\n    char filename[50], content[200];\n    printf(\"\\nEnter filename: \");\n    scanf(\"%s\", filename);\n    fp = fopen(filename, \"w\");\n    if(fp != NULL) {\n        printf(\"Enter content (type 'end' on new line to finish):\\n\");\n        while(1) {\n            scanf(\"%s\", content);\n            if(strcmp(content, \"end\") == 0) break;\n            fprintf(fp, \"%s\\n\", content);\n        }\n        fclose(fp);\n        printf(\"File created successfully!\\n\");\n    } else {\n        printf(\"Error creating file!\\n\");\n    }\n}\n\nvoid readFile() {\n    FILE *fp;\n    char filename[50], line[200];\n    printf(\"\\nEnter filename to read: \");\n    scanf(\"%s\", filename);\n    fp = fopen(filename, \"r\");\n    if(fp != NULL) {\n        printf(\"\\nFile contents:\\n\");\n        while(fgets(line, sizeof(line), fp)) {\n            printf(\"%s\", line);\n        }\n        fclose(fp);\n    } else {\n        printf(\"Error reading file!\\n\");\n    }\n}\n\nvoid appendFile() {\n    FILE *fp;\n    char filename[50], content[200];\n    printf(\"\\nEnter filename to append: \");\n    scanf(\"%s\", filename);\n    fp = fopen(filename, \"a\");\n    if(fp != NULL) {\n        printf(\"Enter content to append (type 'end' on new line to finish):\\n\");\n        while(1) {\n            scanf(\"%s\", content);\n            if(strcmp(content, \"end\") == 0) break;\n            fprintf(fp, \"%s\\n\", content);\n        }\n        fclose(fp);\n        printf(\"Content appended successfully!\\n\");\n    } else {\n        printf(\"Error appending to file!\\n\");\n    }\n}\n\nint main() {\n    int choice;\n    do {\n        printf(\"\\nFile Management System\\n\");\n        printf(\"1. Create File\\n\");\n        printf(\"2. Read File\\n\");\n        printf(\"3. Append to File\\n\");\n        printf(\"4. Exit\\n\");\n        printf(\"Enter your choice: \");\n        scanf(\"%d\", &choice);\n        switch(choice) {\n            case 1: createFile(); break;\n            case 2: readFile(); break;\n            case 3: appendFile(); break;\n            case 4: printf(\"Thank you!\\n\"); break;\n            default: printf(\"Invalid choice!\\n\");\n        }\n    } while(choice != 4);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use proper file handling functions",
                                        "Implement error checking",
                                        "Use different file modes (w, r, a)",
                                        "Include user-friendly interface"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Practical Programming",
                    "concepts": [
                        {
                            "name": "Real-World Applications",
                            "summary": "Programming in Nepal's context involves creating solutions for local challenges and needs. This includes developing applications for education, business, and government services. Understanding both theoretical concepts and practical implementation is crucial. Students should learn to create programs that address real-world problems in Nepal, such as school management systems, inventory management for local businesses, and community service applications. The programming curriculum should focus on practical skills that can be immediately applied in the local context, while also preparing students for global opportunities.",
                            "steps": [
                                "Learn programming fundamentals",
                                "Understand local requirements",
                                "Practice with real examples",
                                "Develop problem-solving skills",
                                "Create practical applications",
                                "Test and debug programs",
                                "Document and maintain code"
                            ],
                            "questions": [
                                {
                                    "question": "Write a C program to create a school fee management system for a Nepali school, including features for different fee types and payment tracking. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\\n#include <string.h>\\n\\nstruct Student {\\n    int roll;\\n    char name[50];\\n    char class[10];\\n    float monthly_fee;\\n    float exam_fee;\\n    float computer_fee;\\n    float total_paid;\\n};\\n\\nvoid addStudent(struct Student *s) {\\n    printf(\\\"Enter Roll No: \\\");\\n    scanf(\\\"%d\\\", &s->roll);\\n    printf(\\\"Enter Name: \\\");\\n    scanf(\\\"%s\\\", s->name);\\n    printf(\\\"Enter Class: \\\");\\n    scanf(\\\"%s\\\", s->class);\\n    printf(\\\"Enter Monthly Fee: \\\");\\n    scanf(\\\"%f\\\", &s->monthly_fee);\\n    printf(\\\"Enter Exam Fee: \\\");\\n    scanf(\\\"%f\\\", &s->exam_fee);\\n    printf(\\\"Enter Computer Fee: \\\");\\n    scanf(\\\"%f\\\", &s->computer_fee);\\n    s->total_paid = 0;\\n}\\n\\nvoid makePayment(struct Student *s) {\\n    float amount;\\n    printf(\\\"Enter payment amount: \\\");\\n    scanf(\\\"%f\\\", &amount);\\n    s->total_paid += amount;\\n    printf(\\\"Payment recorded. Total paid: %.2f\\\\n\\\", s->total_paid);\\n}\\n\\nvoid generateReceipt(struct Student s) {\\n    printf(\\\"\\\\n=== Fee Receipt ===\\\\n\\\");\\n    printf(\\\"Roll No: %d\\\\n\\\", s.roll);\\n    printf(\\\"Name: %s\\\\n\\\", s.name);\\n    printf(\\\"Class: %s\\\\n\\\", s.class);\\n    printf(\\\"Monthly Fee: %.2f\\\\n\\\", s.monthly_fee);\\n    printf(\\\"Exam Fee: %.2f\\\\n\\\", s.exam_fee);\\n    printf(\\\"Computer Fee: %.2f\\\\n\\\", s.computer_fee);\\n    printf(\\\"Total Paid: %.2f\\\\n\\\", s.total_paid);\\n    printf(\\\"Balance: %.2f\\\\n\\\", (s.monthly_fee + s.exam_fee + s.computer_fee - s.total_paid));\\n}\\n\\nint main() {\\n    struct Student s;\\n    int choice;\\n    do {\\n        printf(\\\"\\\\nSchool Fee Management System\\\\n\\\");\\n        printf(\\\"1. Add Student\\\\n\\\");\\n        printf(\\\"2. Make Payment\\\\n\\\");\\n        printf(\\\"3. Generate Receipt\\\\n\\\");\\n        printf(\\\"4. Exit\\\\n\\\");\\n        printf(\\\"Enter choice: \\\");\\n        scanf(\\\"%d\\\", &choice);\\n        switch(choice) {\\n            case 1: addStudent(&s); break;\\n            case 2: makePayment(&s); break;\\n            case 3: generateReceipt(s); break;\\n            case 4: printf(\\\"Thank you!\\\\n\\\"); break;\\n            default: printf(\\\"Invalid choice!\\\\n\\\");\\n        }\\n    } while(choice != 4);\\n    return 0;\\n}"
                                    ],
                                    "hints": [
                                        "Use structures for student data",
                                        "Include different fee types",
                                        "Implement payment tracking",
                                        "Generate detailed receipts"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a simple inventory management system for a local shop in Nepal, including features for stock tracking and sales. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\n#include <string.h>\n\nstruct Product {\n    int code;\n    char name[50];\n    float price;\n    int quantity;\n    char category[20];\n};\n\nstruct Sale {\n    int product_code;\n    int quantity;\n    float total_amount;\n    char date[20];\n};\n\nvoid addProduct(struct Product *p) {\n    printf(\"Enter Product Code: \");\n    scanf(\"%d\", &p->code);\n    printf(\"Enter Product Name: \");\n    scanf(\"%s\", p->name);\n    printf(\"Enter Price: \");\n    scanf(\"%f\", &p->price);\n    printf(\"Enter Quantity: \");\n    scanf(\"%d\", &p->quantity);\n    printf(\"Enter Category: \");\n    scanf(\"%s\", p->category);\n}\n\nvoid makeSale(struct Product *p, struct Sale *s) {\n    printf(\"Enter Product Code: \");\n    scanf(\"%d\", &s->product_code);\n    printf(\"Enter Quantity: \");\n    scanf(\"%d\", &s->quantity);\n    if(s->quantity <= p->quantity) {\n        s->total_amount = s->quantity * p->price;\n        p->quantity -= s->quantity;\n        printf(\"Enter Date (DD/MM/YYYY): \");\n        scanf(\"%s\", s->date);\n        printf(\"Sale recorded. Total: %.2f\\n\", s->total_amount);\n    } else {\n        printf(\"Insufficient stock!\\n\");\n    }\n}\n\nvoid generateReport(struct Product p, struct Sale s) {\n    printf(\"\\n=== Sales Report ===\\n\");\n    printf(\"Product: %s\\n\", p.name);\n    printf(\"Category: %s\\n\", p.category);\n    printf(\"Quantity Sold: %d\\n\", s.quantity);\n    printf(\"Total Amount: %.2f\\n\", s.total_amount);\n    printf(\"Remaining Stock: %d\\n\", p.quantity);\n    printf(\"Date: %s\\n\", s.date);\n}\n\nint main() {\n    struct Product p;\n    struct Sale s;\n    int choice;\n    do {\n        printf(\"\\nInventory Management System\\n\");\n        printf(\"1. Add Product\\n\");\n        printf(\"2. Make Sale\\n\");\n        printf(\"3. Generate Report\\n\");\n        printf(\"4. Exit\\n\");\n        printf(\"Enter choice: \");\n        scanf(\"%d\", &choice);\n        switch(choice) {\n            case 1: addProduct(&p); break;\n            case 2: makeSale(&p, &s); break;\n            case 3: generateReport(p, s); break;\n            case 4: printf(\"Thank you!\\n\"); break;\n            default: printf(\"Invalid choice!\\n\");\n        }\n    } while(choice != 4);\n    return 0;\n}"
                                    ],
                                    "hints": [
                                        "Use structures for products and sales",
                                        "Implement stock tracking",
                                        "Include sales reporting",
                                        "Add date tracking"
                                    ]
                                },
                                {
                                    "question": "Write a C program to create a simple bus ticket booking system for a local bus service in Nepal. [5 marks]",
                                    "acceptable_answers": [
                                        "#include <stdio.h>\\n#include <string.h>\\n\\nstruct Bus {\\n    int bus_no;\\n    char route[50];\\n    int total_seats;\\n    int available_seats;\\n    float fare;\\n};\\n\\nstruct Ticket {\\n    int ticket_no;\\n    int bus_no;\\n    char passenger_name[50];\\n    int seat_no;\\n    char date[20];\\n    float amount_paid;\\n};\\n\\nvoid addBus(struct Bus *b) {\\n    printf(\\\"Enter Bus Number: \\\");\\n    scanf(\\\"%d\\\", &b->bus_no);\\n    printf(\\\"Enter Route: \\\");\\n    scanf(\\\"%s\\\", b->route);\\n    printf(\\\"Enter Total Seats: \\\");\\n    scanf(\\\"%d\\\", &b->total_seats);\\n    b->available_seats = b->total_seats;\\n    printf(\\\"Enter Fare: \\\");\\n    scanf(\\\"%f\\\", &b->fare);\\n}\\n\\nvoid bookTicket(struct Bus *b, struct Ticket *t) {\\n    if(b->available_seats > 0) {\\n        printf(\\\"Enter Passenger Name: \\\");\\n        scanf(\\\"%s\\\", t->passenger_name);\\n        t->bus_no = b->bus_no;\\n        t->seat_no = b->total_seats - b->available_seats + 1;\\n        printf(\\\"Enter Date (DD/MM/YYYY): \\\");\\n        scanf(\\\"%s\\\", t->date);\\n        t->amount_paid = b->fare;\\n        b->available_seats--;\\n        printf(\\\"Ticket booked successfully!\\\\n\\\");\\n    } else {\\n        printf(\\\"Sorry, bus is full!\\\\n\\\");\\n    }\\n}\\n\\nvoid printTicket(struct Ticket t) {\\n    printf(\\\"\\\\n=== Bus Ticket ===\\\\n\\\");\\n    printf(\\\"Ticket No: %d\\\\n\\\", t.ticket_no);\\n    printf(\\\"Passenger: %s\\\\n\\\", t.passenger_name);\\n    printf(\\\"Bus No: %d\\\\n\\\", t.bus_no);\\n    printf(\\\"Seat No: %d\\\\n\\\", t.seat_no);\\n    printf(\\\"Date: %s\\\\n\\\", t.date);\\n    printf(\\\"Amount Paid: %.2f\\\\n\\\", t.amount_paid);\\n}\\n\\nint main() {\\n    struct Bus b;\\n    struct Ticket t;\\n    int choice;\\n    do {\\n        printf(\\\"\\\\nBus Ticket Booking System\\\\n\\\");\\n        printf(\\\"1. Add Bus\\\\n\\\");\\n        printf(\\\"2. Book Ticket\\\\n\\\");\\n        printf(\\\"3. Print Ticket\\\\n\\\");\\n        printf(\\\"4. Exit\\\\n\\\");\\n        printf(\\\"Enter choice: \\\");\\n        scanf(\\\"%d\\\", &choice);\\n        switch(choice) {\\n            case 1: addBus(&b); break;\\n            case 2: bookTicket(&b, &t); break;\\n            case 3: printTicket(t); break;\\n            case 4: printf(\\\"Thank you!\\\\n\\\"); break;\\n            default: printf(\\\"Invalid choice!\\\\n\\\");\\n        }\\n    } while(choice != 4);\\n    return 0;\\n}"
                                    ],
                                    "hints": [
                                        "Use structures for bus and ticket data",
                                        "Implement seat tracking",
                                        "Include fare calculation",
                                        "Generate ticket details"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Database Management System",
            "subtopics": [
                {
                    "name": "Database Concepts",
                    "concepts": [
                        {
                            "name": "Introduction to Databases",
                            "summary": "A database is an organized collection of data that can be easily accessed, managed, and updated. Database Management Systems (DBMS) are software applications that interact with databases. Key concepts include data models, relationships, normalization, and SQL. Databases are essential for storing and retrieving information efficiently. They support various operations like insertion, deletion, modification, and querying of data. Understanding database concepts is crucial for data management and application development. Databases can be relational (using tables) or non-relational (using other structures). They ensure data integrity, security, and consistency. Modern databases support features like transactions, concurrency control, and backup/recovery.",
                            "steps": [
                                "Learn basic database concepts",
                                "Understand data models and relationships",
                                "Study database design principles",
                                "Practice SQL queries",
                                "Explore database management"
                            ],
                            "questions": [
                                {
                                    "question": "What is a database? Explain its importance. [5 marks]",
                                    "acceptable_answers": [
                                        "Database: 1) Organized collection of data, 2) Managed by DBMS, 3) Supports data operations. Importance: 1) Efficient data storage, 2) Easy data retrieval, 3) Data consistency, 4) Data security, 5) Supports multiple users"
                                    ],
                                    "hints": [
                                        "Consider data organization",
                                        "Think about data management"
                                    ]
                                },
                                {
                                    "question": "Differentiate between DBMS and RDBMS. [4 marks]",
                                    "acceptable_answers": [
                                        "DBMS: 1) Manages any type of database, 2) May not support relationships, 3) Simpler structure. RDBMS: 1) Manages relational databases, 2) Supports relationships, 3) Uses tables, 4) Follows ACID properties"
                                    ],
                                    "hints": [
                                        "Consider data organization",
                                        "Think about relationships"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of normalization in databases. [5 marks]",
                                    "acceptable_answers": [
                                        "Normalization: 1) Process of organizing data, 2) Reduces redundancy, 3) Prevents anomalies, 4) Improves data integrity, 5) Follows normal forms (1NF, 2NF, 3NF)"
                                    ],
                                    "hints": [
                                        "Consider data organization",
                                        "Think about data efficiency"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "MS Access",
                    "concepts": [
                        {
                            "name": "MS Access Fundamentals",
                            "summary": "Microsoft Access is a powerful database management system widely used in Nepali schools and businesses. It combines a graphical user interface with database capabilities, making it ideal for learning database concepts. Key features include table creation, relationship management, form design, report generation, and query building. MS Access is particularly useful for small to medium-sized applications like school management systems, library management, and business databases. Understanding MS Access is essential for database management and application development in Nepal's context. The software includes features for data validation, security, and backup, which are crucial for maintaining data integrity in educational institutions and businesses.",
                            "steps": [
                                "Learn MS Access interface and basic concepts",
                                "Create and manage tables with proper relationships",
                                "Design user-friendly forms for data entry",
                                "Create queries for data retrieval and analysis",
                                "Generate professional reports",
                                "Implement data validation and security",
                                "Practice with real-world examples"
                            ],
                            "questions": [
                                {
                                    "question": "What is a primary key? Explain its importance. [4 marks]",
                                    "acceptable_answers": [
                                        "Primary key: 1) Uniquely identifies records, 2) Prevents duplicates, 3) Creates relationships, 4) Improves data integrity, 5) Makes searching faster"
                                    ],
                                    "hints": [
                                        "Consider record identification",
                                        "Think about data relationships"
                                    ]
                                },
                                {
                                    "question": "Differentiate between Form and Report in MS Access. [5 marks]",
                                    "acceptable_answers": [
                                        "Form: 1) Used for data entry, 2) User-friendly interface, 3) Shows one record, 4) Can include controls. Report: 1) Used for display/printing, 2) Shows multiple records, 3) Can include calculations, 4) Better for presentation"
                                    ],
                                    "hints": [
                                        "Consider their purposes",
                                        "Think about data presentation"
                                    ]
                                },
                                {
                                    "question": "Write a SQL query to find students with marks above 80. [4 marks]",
                                    "acceptable_answers": [
                                        "SELECT * FROM Students WHERE Marks > 80;"
                                    ],
                                    "hints": [
                                        "Use SELECT statement",
                                        "Use WHERE clause for condition"
                                    ]
                                },
                                {
                                    "question": "Create a school management database in MS Access with tables for students, teachers, and courses. Include proper relationships and data validation. [5 marks]",
                                    "acceptable_answers": [
                                        "Steps to create school management database:\n1) Create Tables:\n   - Students (StudentID, Name, Class, RollNo, Address, Phone)\n   - Teachers (TeacherID, Name, Subject, Qualification, Phone)\n   - Courses (CourseID, CourseName, TeacherID, Class)\n2) Set Relationships:\n   - One-to-Many between Teachers and Courses\n   - One-to-Many between Courses and Students\n3) Add Validation Rules:\n   - Phone numbers must be 10 digits\n   - Roll numbers must be unique\n   - Class must be between 1-12\n4) Create Forms:\n   - Student Entry Form\n   - Teacher Entry Form\n   - Course Assignment Form\n5) Create Queries:\n   - List all students in a class\n   - Find teachers for a subject\n   - Generate class-wise reports"
                                    ],
                                    "hints": [
                                        "Use proper data types for each field",
                                        "Set up referential integrity",
                                        "Create lookup fields for better data entry",
                                        "Add input masks for phone numbers"
                                    ]
                                },
                                {
                                    "question": "Design a library management system in MS Access for a school library. Include features for book management, member management, and issue/return tracking. [5 marks]",
                                    "acceptable_answers": [
                                        "Library Management System Design:\n1) Tables Required:\n   - Books (BookID, Title, Author, Category, Status)\n   - Members (MemberID, Name, Class, RollNo, JoinDate)\n   - Issues (IssueID, BookID, MemberID, IssueDate, ReturnDate)\n2) Relationships:\n   - One-to-Many between Books and Issues\n   - One-to-Many between Members and Issues\n3) Forms:\n   - Book Entry Form with validation\n   - Member Registration Form\n   - Book Issue/Return Form\n4) Queries:\n   - Books available for issue\n   - Overdue books list\n   - Member-wise issue history\n5) Reports:\n   - Daily issue/return report\n   - Category-wise book list\n   - Overdue books report"
                                    ],
                                    "hints": [
                                        "Include date validation for issue/return",
                                        "Add status tracking for books",
                                        "Create calculated fields for fines",
                                        "Implement member category system"
                                    ]
                                },
                                {
                                    "question": "Create a fee management system for a school using MS Access. Include features for fee collection, receipt generation, and outstanding balance tracking. [5 marks]",
                                    "acceptable_answers": [
                                        "Fee Management System Design:\n1) Tables:\n   - Students (StudentID, Name, Class, RollNo)\n   - FeeStructure (FeeID, Class, FeeType, Amount)\n   - Payments (PaymentID, StudentID, FeeID, Amount, Date, ReceiptNo)\n2) Relationships:\n   - One-to-Many between Students and Payments\n   - One-to-Many between FeeStructure and Payments\n3) Forms:\n   - Student Fee Entry Form\n   - Receipt Generation Form\n   - Outstanding Balance Form\n4) Queries:\n   - Class-wise fee collection\n   - Student-wise payment history\n   - Outstanding balance report\n5) Reports:\n   - Daily collection report\n   - Monthly fee statement\n   - Outstanding balance report"
                                    ],
                                    "hints": [
                                        "Include payment mode tracking",
                                        "Add receipt number generation",
                                        "Create balance calculation queries",
                                        "Implement fee structure by class"
                                    ]
                                },
                                {
                                    "question": "Design a result management system for a school using MS Access. Include features for marks entry, grade calculation, and result generation. [5 marks]",
                                    "acceptable_answers": [
                                        "Result Management System Design:\n1) Tables:\n   - Students (StudentID, Name, Class, RollNo)\n   - Subjects (SubjectID, SubjectName, Class)\n   - Marks (MarkID, StudentID, SubjectID, Term, Marks, Grade)\n2) Relationships:\n   - One-to-Many between Students and Marks\n   - One-to-Many between Subjects and Marks\n3) Forms:\n   - Marks Entry Form with validation\n   - Grade Calculation Form\n   - Result Generation Form\n4) Queries:\n   - Subject-wise performance\n   - Class-wise result analysis\n   - Student-wise grade report\n5) Reports:\n   - Term-wise result card\n   - Class performance report\n   - Subject-wise analysis"
                                    ],
                                    "hints": [
                                        "Implement grade calculation rules",
                                        "Add marks validation (0-100)",
                                        "Create result card format",
                                        "Include pass/fail criteria"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Practical Database Applications",
                    "concepts": [
                        {
                            "name": "Real-World Database Solutions",
                            "summary": "Database management in Nepal's context involves creating practical solutions for local businesses, schools, and government organizations. This includes developing systems for student management, inventory control, and service delivery. Understanding both theoretical concepts and practical implementation is crucial. Students should learn to create database solutions that address real-world problems in Nepal, such as school management systems, inventory management for local businesses, and community service applications. The curriculum should focus on practical skills that can be immediately applied in the local context, while also preparing students for global opportunities.",
                            "steps": [
                                "Learn database fundamentals",
                                "Understand local requirements",
                                "Practice with real examples",
                                "Develop problem-solving skills",
                                "Create practical applications",
                                "Test and optimize databases",
                                "Document and maintain systems"
                            ],
                            "questions": [
                                {
                                    "question": "Design a database for a Nepali school management system using MS Access, including tables for students, teachers, courses, and attendance. [5 marks]",
                                    "acceptable_answers": [
                                        "School Management Database Design:\n\n1) Students Table:\n   - StudentID (Primary Key)\n   - Name\n   - Class\n   - RollNo\n   - Address\n   - Phone\n   - GuardianName\n   - JoinDate\n\n2) Teachers Table:\n   - TeacherID (Primary Key)\n   - Name\n   - Subject\n   - Qualification\n   - Phone\n   - Email\n   - JoinDate\n\n3) Courses Table:\n   - CourseID (Primary Key)\n   - CourseName\n   - TeacherID (Foreign Key)\n   - Class\n   - Duration\n   - Fee\n\n4) Attendance Table:\n   - AttendanceID (Primary Key)\n   - StudentID (Foreign Key)\n   - Date\n   - Status (Present/Absent)\n   - Remarks\n\n5) Relationships:\n   - One-to-Many between Teachers and Courses\n   - One-to-Many between Students and Attendance\n   - One-to-Many between Courses and Students\n\n6) Validation Rules:\n   - Phone numbers must be 10 digits\n   - Roll numbers must be unique\n   - Class must be between 1-12\n   - Dates must be valid\n\n7) Forms:\n   - Student Entry Form\n   - Teacher Entry Form\n   - Attendance Entry Form\n   - Course Assignment Form\n\n8) Reports:\n   - Class-wise student list\n   - Attendance report\n   - Teacher-wise course list\n   - Student performance report"
                                    ],
                                    "hints": [
                                        "Use proper data types for each field",
                                        "Set up referential integrity",
                                        "Create lookup fields for better data entry",
                                        "Add input masks for phone numbers"
                                    ]
                                },
                                {
                                    "question": "Create a database for a local bus service in Nepal, including tables for buses, routes, tickets, and passengers. [5 marks]",
                                    "acceptable_answers": [
                                        "Bus Service Database Design:\n\n1) Buses Table:\n   - BusID (Primary Key)\n   - BusNumber\n   - Capacity\n   - Type (Local/Express)\n   - Status (Active/Inactive)\n\n2) Routes Table:\n   - RouteID (Primary Key)\n   - FromLocation\n   - ToLocation\n   - Distance\n   - Fare\n   - Duration\n\n3) Tickets Table:\n   - TicketID (Primary Key)\n   - BusID (Foreign Key)\n   - RouteID (Foreign Key)\n   - PassengerID (Foreign Key)\n   - IssueDate\n   - JourneyDate\n   - SeatNumber\n   - Fare\n   - Status (Booked/Cancelled)\n\n4) Passengers Table:\n   - PassengerID (Primary Key)\n   - Name\n   - Phone\n   - Address\n   - IDType (Citizenship/Passport)\n   - IDNumber\n\n5) Relationships:\n   - One-to-Many between Buses and Tickets\n   - One-to-Many between Routes and Tickets\n   - One-to-Many between Passengers and Tickets\n\n6) Validation Rules:\n   - Phone numbers must be 10 digits\n   - Fare must be positive\n   - Dates must be valid\n   - Seat numbers must be unique per bus\n\n7) Forms:\n   - Bus Entry Form\n   - Route Entry Form\n   - Ticket Booking Form\n   - Passenger Registration Form\n\n8) Reports:\n   - Daily ticket sales\n   - Route-wise passenger list\n   - Bus-wise occupancy report\n   - Revenue report"
                                    ],
                                    "hints": [
                                        "Consider different types of buses",
                                        "Include fare calculation",
                                        "Track seat availability",
                                        "Generate booking reports"
                                    ]
                                },
                                {
                                    "question": "Design a database for a local shop inventory management system in Nepal, including tables for products, suppliers, sales, and stock. [5 marks]",
                                    "acceptable_answers": [
                                        "Shop Inventory Database Design:\n\n1) Products Table:\n   - ProductID (Primary Key)\n   - Name\n   - Category\n   - UnitPrice\n   - ReorderLevel\n   - SupplierID (Foreign Key)\n\n2) Suppliers Table:\n   - SupplierID (Primary Key)\n   - Name\n   - ContactPerson\n   - Phone\n   - Address\n   - Email\n\n3) Stock Table:\n   - StockID (Primary Key)\n   - ProductID (Foreign Key)\n   - Quantity\n   - LastUpdated\n   - Location\n\n4) Sales Table:\n   - SaleID (Primary Key)\n   - ProductID (Foreign Key)\n   - Quantity\n   - UnitPrice\n   - TotalAmount\n   - SaleDate\n   - PaymentMethod\n\n5) Relationships:\n   - One-to-Many between Suppliers and Products\n   - One-to-Many between Products and Stock\n   - One-to-Many between Products and Sales\n\n6) Validation Rules:\n   - Phone numbers must be 10 digits\n   - Prices must be positive\n   - Quantities must be positive\n   - Stock cannot be negative\n\n7) Forms:\n   - Product Entry Form\n   - Supplier Entry Form\n   - Stock Update Form\n   - Sales Entry Form\n\n8) Reports:\n   - Low stock alert\n   - Sales analysis\n   - Supplier-wise product list\n   - Daily sales report"
                                    ],
                                    "hints": [
                                        "Track stock levels",
                                        "Include supplier information",
                                        "Calculate sales totals",
                                        "Generate inventory reports"
                                    ]
                                },
                                {
                                    "question": "Create a database for a local hospital management system in Nepal, including tables for patients, doctors, appointments, and medical records. [5 marks]",
                                    "acceptable_answers": [
                                        "Hospital Management Database Design:\n\n1) Patients Table:\n   - PatientID (Primary Key)\n   - Name\n   - Age\n   - Gender\n   - Address\n   - Phone\n   - BloodGroup\n   - EmergencyContact\n\n2) Doctors Table:\n   - DoctorID (Primary Key)\n   - Name\n   - Specialization\n   - Qualification\n   - Phone\n   - Email\n   - ConsultationFee\n\n3) Appointments Table:\n   - AppointmentID (Primary Key)\n   - PatientID (Foreign Key)\n   - DoctorID (Foreign Key)\n   - Date\n   - Time\n   - Status (Scheduled/Completed/Cancelled)\n   - Fee\n\n4) MedicalRecords Table:\n   - RecordID (Primary Key)\n   - PatientID (Foreign Key)\n   - DoctorID (Foreign Key)\n   - Diagnosis\n   - Prescription\n   - Date\n   - FollowUpDate\n\n5) Relationships:\n   - One-to-Many between Doctors and Appointments\n   - One-to-Many between Patients and Appointments\n   - One-to-Many between Patients and MedicalRecords\n   - One-to-Many between Doctors and MedicalRecords\n\n6) Validation Rules:\n   - Phone numbers must be 10 digits\n   - Ages must be positive\n   - Dates must be valid\n   - Fees must be positive\n\n7) Forms:\n   - Patient Registration Form\n   - Doctor Entry Form\n   - Appointment Booking Form\n   - Medical Record Entry Form\n\n8) Reports:\n   - Daily appointments\n   - Patient history\n   - Doctor schedule\n   - Medical records summary"
                                    ],
                                    "hints": [
                                        "Track patient history",
                                        "Manage appointments",
                                        "Record medical information",
                                        "Generate medical reports"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Computer Security and Ethics",
            "subtopics": [
                {
                    "name": "Security and Ethics",
                    "concepts": [
                        {
                            "name": "Computer Security",
                            "summary": "Computer security involves protecting computer systems and data from theft, damage, or unauthorized access. It encompasses various measures and practices to ensure the confidentiality, integrity, and availability of information. Key concepts include authentication, authorization, encryption, firewalls, and security protocols. Common security threats include malware, phishing, denial of service attacks, and data breaches. Security measures include using strong passwords, implementing firewalls, encrypting data, and maintaining regular backups. Understanding security concepts is crucial for both system administration and safe internet usage. Security protocols like SSL/TLS ensure secure communication, while VPNs provide secure remote access. Regular security audits and monitoring help identify and prevent potential threats.",
                            "steps": [
                                "Learn security fundamentals",
                                "Understand common threats",
                                "Study security measures",
                                "Practice security best practices",
                                "Explore security tools"
                            ],
                            "questions": [
                                {
                                    "question": "What is a computer virus? Explain its types and prevention methods. [5 marks]",
                                    "acceptable_answers": [
                                        "Computer virus: 1) Malicious program that replicates, 2) Damages computer systems. Types: 1) Boot sector virus, 2) File virus, 3) Macro virus, 4) Polymorphic virus. Prevention: 1) Use antivirus software, 2) Regular updates, 3) Avoid suspicious downloads, 4) Backup data, 5) Use strong passwords"
                                    ],
                                    "hints": [
                                        "Consider how viruses spread",
                                        "Think about protection methods"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of encryption in computer security. [4 marks]",
                                    "acceptable_answers": [
                                        "Encryption: 1) Converts data into unreadable format, 2) Uses algorithms and keys, 3) Ensures data confidentiality, 4) Types include symmetric and asymmetric, 5) Essential for secure communication"
                                    ],
                                    "hints": [
                                        "Consider data protection",
                                        "Think about secure transmission"
                                    ]
                                },
                                {
                                    "question": "What is a firewall and how does it work? [5 marks]",
                                    "acceptable_answers": [
                                        "Firewall: 1) Network security device, 2) Monitors and controls traffic, 3) Uses rules to allow/block packets, 4) Can be hardware or software, 5) Protects against unauthorized access, 6) Implements security policies"
                                    ],
                                    "hints": [
                                        "Consider traffic control",
                                        "Think about security rules"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Computer Ethics",
                            "summary": "Computer ethics deals with the moral principles and guidelines that govern the use of computers and technology. It covers issues like privacy, intellectual property, and responsible use of technology. Key concepts include digital citizenship, online safety, and ethical computing practices. Understanding computer ethics is crucial for responsible technology use. Ethical considerations include respecting privacy, protecting intellectual property, and avoiding harmful activities. Computer ethics also addresses issues like cyberbullying, digital divide, and environmental impact. It promotes responsible and ethical behavior in the digital world.",
                            "steps": [
                                "Understand ethical principles",
                                "Learn about digital citizenship",
                                "Study privacy issues",
                                "Practice ethical computing",
                                "Explore ethical dilemmas"
                            ],
                            "questions": [
                                {
                                    "question": "What is cyber law? Explain its importance in Nepal. [5 marks]",
                                    "acceptable_answers": [
                                        "Cyber law: 1) Law governing cyberspace, 2) Controls cyber crimes, 3) Provides legal status to online transactions, 4) Protects digital signatures, 5) Regulates electronic records. Importance: 1) Prevents cyber crimes, 2) Protects online users, 3) Promotes e-commerce, 4) Ensures digital security"
                                    ],
                                    "hints": [
                                        "Consider legal aspects",
                                        "Think about digital security"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of digital citizenship. [4 marks]",
                                    "acceptable_answers": [
                                        "Digital citizenship: 1) Responsible use of technology, 2) Respects digital rights, 3) Follows online etiquette, 4) Protects digital identity, 5) Promotes positive online behavior"
                                    ],
                                    "hints": [
                                        "Consider online behavior",
                                        "Think about digital responsibility"
                                    ]
                                },
                                {
                                    "question": "What are the ethical issues in using social media? [5 marks]",
                                    "acceptable_answers": [
                                        "Ethical issues: 1) Privacy concerns, 2) Cyberbullying, 3) Fake news, 4) Digital addiction, 5) Data misuse, 6) Online harassment, 7) Digital footprint"
                                    ],
                                    "hints": [
                                        "Consider user impact",
                                        "Think about social responsibility"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Cyber Security in Nepal",
                    "concepts": [
                        {
                            "name": "Cyber Laws and Security",
                            "summary": "Computer security in Nepal is governed by various laws and regulations, including the Electronic Transactions Act, 2063, and the Cyber Crime Act. Understanding these laws is crucial for both personal and organizational security. The Nepal Police's Central Investigation Bureau (CIB) handles cybercrime investigations. Key security aspects include data protection, privacy rights, and digital signatures. Nepal's cyber security landscape faces unique challenges like limited awareness, infrastructure constraints, and evolving threats. Organizations must comply with sector-specific regulations, such as NRB guidelines for banks and NTA regulations for telecom companies. Understanding these security measures is essential for safe digital practices in Nepal's context.",
                            "steps": [
                                "Learn Nepal's cyber laws and regulations",
                                "Understand common cyber threats",
                                "Study security best practices",
                                "Practice secure computing",
                                "Implement security measures",
                                "Monitor and respond to threats",
                                "Stay updated with security trends"
                            ],
                            "questions": [
                                {
                                    "question": "Explain the key provisions of Nepal's Electronic Transactions Act, 2063, and its importance for cyber security. [5 marks]",
                                    "acceptable_answers": [
                                        "Electronic Transactions Act, 2063:\\n\\n1) Digital Signature:\\n   - Legal recognition of digital signatures\\n   - Certification authority framework\\n   - Electronic document validity\\n\\n2) Cyber Crimes:\\n   - Unauthorized access\\n   - Data theft and damage\\n   - Computer fraud\\n   - Identity theft\\n\\n3) Electronic Records:\\n   - Legal validity of electronic records\\n   - Data retention requirements\\n   - Privacy protection\\n\\n4) Security Measures:\\n   - Required security standards\\n   - Data protection guidelines\\n   - Incident reporting\\n\\n5) Enforcement:\\n   - Investigation procedures\\n   - Penalties and punishments\\n   - Jurisdiction and authority"
                                    ],
                                    "hints": [
                                        "Consider digital signature provisions",
                                        "Think about cyber crime definitions",
                                        "Include privacy aspects",
                                        "Consider enforcement mechanisms"
                                    ]
                                },
                                {
                                    "question": "Describe the security measures required for a bank's online banking system in Nepal, considering NRB guidelines. [5 marks]",
                                    "acceptable_answers": [
                                        "Bank Security Measures:\\n\\n1) Authentication:\\n   - Multi-factor authentication\\n   - OTP system\\n   - Transaction signing\\n   - Session management\\n\\n2) Data Protection:\\n   - End-to-end encryption\\n   - Secure data storage\\n   - Regular backups\\n   - Access control\\n\\n3) Network Security:\\n   - Firewall configuration\\n   - Intrusion detection\\n   - VPN for staff\\n   - Regular security audits\\n\\n4) Compliance:\\n   - NRB guidelines adherence\\n   - Regular reporting\\n   - Security assessments\\n   - Incident response plan\\n\\n5) User Protection:\\n   - Transaction limits\\n   - Fraud monitoring\\n   - Customer education\\n   - 24/7 support"
                                    ],
                                    "hints": [
                                        "Consider NRB requirements",
                                        "Include multi-layer security",
                                        "Think about user protection",
                                        "Plan for incident response"
                                    ]
                                },
                                {
                                    "question": "Explain the steps to implement a secure e-commerce system in Nepal, considering local regulations and security requirements. [5 marks]",
                                    "acceptable_answers": [
                                        "E-commerce Security Implementation:\\n\\n1) Legal Compliance:\\n   - Electronic Transactions Act\\n   - Consumer protection laws\\n   - Tax regulations\\n   - Privacy requirements\\n\\n2) Security Measures:\\n   - SSL/TLS encryption\\n   - Secure payment gateway\\n   - Data encryption\\n   - Access control\\n\\n3) User Protection:\\n   - Secure authentication\\n   - Transaction verification\\n   - Privacy policy\\n   - Data protection\\n\\n4) System Security:\\n   - Regular updates\\n   - Security monitoring\\n   - Backup systems\\n   - Incident response\\n\\n5) Customer Support:\\n   - Security guidelines\\n   - Help desk\\n   - Dispute resolution\\n   - Regular communication"
                                    ],
                                    "hints": [
                                        "Consider payment security",
                                        "Include user protection",
                                        "Think about legal compliance",
                                        "Plan for customer support"
                                    ]
                                },
                                {
                                    "question": "Describe the process of implementing a secure school management system in Nepal, including data protection and access control. [5 marks]",
                                    "acceptable_answers": [
                                        "School Management System Security:\\n\\n1) User Management:\\n   - Role-based access control\\n   - Strong authentication\\n   - Password policies\\n   - Session management\\n\\n2) Data Protection:\\n   - Student data encryption\\n   - Regular backups\\n   - Access logging\\n   - Privacy controls\\n\\n3) System Security:\\n   - Firewall configuration\\n   - Antivirus protection\\n   - Regular updates\\n   - Security monitoring\\n\\n4) Access Control:\\n   - Staff access levels\\n   - Student portal security\\n   - Parent access controls\\n   - Admin privileges\\n\\n5) Compliance:\\n   - Data protection laws\\n   - Privacy requirements\\n   - Regular audits\\n   - Incident response"
                                    ],
                                    "hints": [
                                        "Consider student data protection",
                                        "Include access control levels",
                                        "Think about privacy requirements",
                                        "Plan for regular maintenance"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Contemporary Technology",
            "subtopics": [
                {
                    "name": "Modern Technologies",
                    "concepts": [
                        {
                            "name": "Cloud Computing",
                            "summary": "Cloud computing is the delivery of computing services over the internet. It includes services like storage, processing power, and software applications. Key concepts include IaaS (Infrastructure as a Service), PaaS (Platform as a Service), and SaaS (Software as a Service). Cloud computing offers benefits like scalability, cost-effectiveness, and accessibility. It enables businesses and individuals to access resources on-demand without managing physical infrastructure. Understanding cloud computing is crucial for modern technology use. Cloud services are provided by companies like Amazon Web Services, Microsoft Azure, and Google Cloud Platform. Security and privacy are important considerations in cloud computing.",
                            "steps": [
                                "Learn cloud computing basics",
                                "Understand service models",
                                "Study deployment options",
                                "Explore cloud applications",
                                "Practice cloud security"
                            ],
                            "questions": [
                                {
                                    "question": "What are the main types of cloud computing services? [5 marks]",
                                    "acceptable_answers": [
                                        "Main types: 1) IaaS - provides virtualized computing resources, 2) PaaS - provides development platforms, 3) SaaS - provides software applications, 4) Each type offers different levels of service and management"
                                    ],
                                    "hints": [
                                        "Consider different service levels",
                                        "Think about what users need to manage"
                                    ]
                                },
                                {
                                    "question": "Explain the benefits of cloud computing. [4 marks]",
                                    "acceptable_answers": [
                                        "Benefits: 1) Scalability - easily adjust resources, 2) Cost-effectiveness - pay for what you use, 3) Accessibility - access from anywhere, 4) No physical infrastructure needed, 5) Automatic updates and maintenance"
                                    ],
                                    "hints": [
                                        "Consider resource management",
                                        "Think about cost and accessibility"
                                    ]
                                },
                                {
                                    "question": "What are the security concerns in cloud computing? [5 marks]",
                                    "acceptable_answers": [
                                        "Security concerns: 1) Data privacy, 2) Data breaches, 3) Access control, 4) Compliance issues, 5) Service availability, 6) Data loss, 7) Shared technology vulnerabilities"
                                    ],
                                    "hints": [
                                        "Consider data protection",
                                        "Think about access control"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Artificial Intelligence",
                            "summary": "Artificial Intelligence (AI) is the simulation of human intelligence by machines. It includes machine learning, natural language processing, and robotics. AI applications are transforming various industries. Key concepts include algorithms, neural networks, and deep learning. Understanding AI is crucial for future technology development. AI is used in applications like virtual assistants, recommendation systems, and autonomous vehicles. Ethical considerations include bias, privacy, and job displacement. AI research and development are advancing rapidly, leading to new capabilities and applications.",
                            "steps": [
                                "Learn AI fundamentals",
                                "Understand machine learning",
                                "Study AI applications",
                                "Explore ethical considerations",
                                "Practice AI concepts"
                            ],
                            "questions": [
                                {
                                    "question": "What are the main applications of Artificial Intelligence? [5 marks]",
                                    "acceptable_answers": [
                                        "Main applications: 1) Machine learning for pattern recognition, 2) Natural language processing for language understanding, 3) Computer vision for image recognition, 4) Robotics for automation, 5) Expert systems for decision making"
                                    ],
                                    "hints": [
                                        "Consider different AI fields",
                                        "Think about practical uses"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of machine learning. [4 marks]",
                                    "acceptable_answers": [
                                        "Machine learning: 1) Subset of AI, 2) Enables systems to learn from data, 3) Improves with experience, 4) Types include supervised, unsupervised, and reinforcement learning, 5) Used for prediction and classification"
                                    ],
                                    "hints": [
                                        "Consider learning from data",
                                        "Think about improvement over time"
                                    ]
                                },
                                {
                                    "question": "What are the ethical issues in AI? [5 marks]",
                                    "acceptable_answers": [
                                        "Ethical issues: 1) Bias in algorithms, 2) Privacy concerns, 3) Job displacement, 4) Decision-making transparency, 5) Security risks, 6) Accountability, 7) Impact on society"
                                    ],
                                    "hints": [
                                        "Consider societal impact",
                                        "Think about fairness and transparency"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "Internet of Things (IoT)",
                            "summary": "IoT refers to the network of physical devices embedded with sensors and software that can collect and exchange data. It enables smart homes, cities, and industries through connected devices. Key concepts include sensors, connectivity, and data analytics. Understanding IoT is crucial for modern technology applications. IoT devices include smart thermostats, wearable devices, and industrial sensors. Security and privacy are important considerations in IoT. IoT is transforming various sectors like healthcare, transportation, and manufacturing.",
                            "steps": [
                                "Learn IoT fundamentals",
                                "Understand sensor technology",
                                "Study IoT applications",
                                "Explore security concerns",
                                "Practice IoT concepts"
                            ],
                            "questions": [
                                {
                                    "question": "How does IoT work and what are its applications? [5 marks]",
                                    "acceptable_answers": [
                                        "IoT working: 1) Devices with sensors collect data, 2) Data transmitted over network, 3) Processed and analyzed, 4) Results used for actions. Applications: 1) Smart homes, 2) Healthcare monitoring, 3) Industrial automation, 4) Smart cities, 5) Transportation"
                                    ],
                                    "hints": [
                                        "Consider data flow",
                                        "Think about practical uses"
                                    ]
                                },
                                {
                                    "question": "What are the security challenges in IoT? [4 marks]",
                                    "acceptable_answers": [
                                        "Security challenges: 1) Device vulnerabilities, 2) Data privacy, 3) Network security, 4) Lack of standards, 5) Physical security of devices"
                                    ],
                                    "hints": [
                                        "Consider device security",
                                        "Think about data protection"
                                    ]
                                },
                                {
                                    "question": "Explain the concept of smart homes in IoT. [5 marks]",
                                    "acceptable_answers": [
                                        "Smart homes: 1) Connected devices for automation, 2) Control via smartphones, 3) Energy efficiency, 4) Security systems, 5) Comfort and convenience, 6) Remote monitoring and control"
                                    ],
                                    "hints": [
                                        "Consider home automation",
                                        "Think about user convenience"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "Technology in Nepal",
                    "concepts": [
                        {
                            "name": "Modern Technology Applications",
                            "summary": "Contemporary technology in Nepal is rapidly evolving, with significant developments in digital payment systems, e-governance, and mobile applications. Key areas include digital banking (Khalti, eSewa), government services (Nagarik App), and educational technology. The country is witnessing growth in cloud computing adoption, mobile app development, and digital transformation across sectors. Understanding these technologies is crucial for Nepal's digital future. Local tech startups are innovating in areas like fintech, edtech, and healthtech. The government's Digital Nepal Framework aims to transform the country through technology. Students need to understand both global tech trends and their local applications in Nepal's context.",
                            "steps": [
                                "Learn about Nepal's digital initiatives",
                                "Study local technology applications",
                                "Understand emerging tech trends",
                                "Explore startup ecosystem",
                                "Practice with local examples",
                                "Analyze implementation challenges",
                                "Develop practical solutions"
                            ],
                            "questions": [
                                {
                                    "question": "Explain the role of digital payment systems in Nepal's economy, using examples like Khalti and eSewa. [5 marks]",
                                    "acceptable_answers": [
                                        "Digital Payment Systems in Nepal:\n1) Mobile Wallets:\n   - Khalti: Bill payments, recharges\n   - eSewa: Money transfer, shopping\n   - IME Pay: International remittance\n2) Features:\n   - QR code payments\n   - Bill payments\n   - Mobile recharge\n   - Fund transfer\n3) Benefits:\n   - Cashless transactions\n   - Financial inclusion\n   - Convenient payments\n   - Reduced cash handling\n4) Security:\n   - Two-factor authentication\n   - Transaction limits\n   - Fraud protection\n   - Regular monitoring\n5) Impact:\n   - Digital economy growth\n   - Financial accessibility\n   - Business opportunities\n   - Government revenue"
                                    ],
                                    "hints": [
                                        "Consider popular payment apps",
                                        "Think about security features",
                                        "Include user benefits",
                                        "Consider economic impact"
                                    ]
                                },
                                {
                                    "question": "Describe the implementation of e-governance in Nepal, including the Nagarik App and other digital services. [5 marks]",
                                    "acceptable_answers": [
                                        "E-Governance Implementation:\n1) Digital Services:\n   - Nagarik App for citizen services\n   - Online tax payment system\n   - Digital driving license\n   - Online passport application\n2) Features:\n   - Document verification\n   - Service tracking\n   - Online payments\n   - Status updates\n3) Benefits:\n   - Reduced bureaucracy\n   - Time saving\n   - Transparency\n   - Accessibility\n4) Challenges:\n   - Digital literacy\n   - Infrastructure\n   - Internet access\n   - Technical support\n5) Future Plans:\n   - More online services\n   - Integration of systems\n   - Mobile accessibility\n   - Enhanced security"
                                    ],
                                    "hints": [
                                        "Consider popular government apps",
                                        "Think about service accessibility",
                                        "Include implementation challenges",
                                        "Consider future developments"
                                    ]
                                },
                                {
                                    "question": "Explain the role of technology in Nepal's education system, including online learning platforms and digital resources. [5 marks]",
                                    "acceptable_answers": [
                                        "Technology in Education:\n1) Online Learning:\n   - E-Pustakalaya\n   - OLE Nepal programs\n   - Digital learning platforms\n   - Video conferencing tools\n2) Digital Resources:\n   - E-books and materials\n   - Educational apps\n   - Online assessments\n   - Digital libraries\n3) Implementation:\n   - School computer labs\n   - Teacher training\n   - Student access\n   - Content development\n4) Challenges:\n   - Internet connectivity\n   - Device availability\n   - Digital literacy\n   - Content relevance\n5) Solutions:\n   - Offline resources\n   - Mobile learning\n   - Community centers\n   - Teacher support"
                                    ],
                                    "hints": [
                                        "Consider local learning platforms",
                                        "Think about accessibility issues",
                                        "Include implementation challenges",
                                        "Consider practical solutions"
                                    ]
                                },
                                {
                                    "question": "Describe the development of Nepal's startup ecosystem and its impact on technology innovation. [5 marks]",
                                    "acceptable_answers": [
                                        "Nepal's Startup Ecosystem:\n1) Key Areas:\n   - Fintech (Khalti, eSewa)\n   - Edtech (E-Pustakalaya)\n   - Healthtech (Mediflow)\n   - E-commerce (Sastodeal)\n2) Support Systems:\n   - Startup accelerators\n   - Incubation centers\n   - Government programs\n   - Investment funds\n3) Success Factors:\n   - Local market understanding\n   - Technology adoption\n   - Team expertise\n   - Funding availability\n4) Challenges:\n   - Limited investment\n   - Market size\n   - Infrastructure\n   - Regulatory framework\n5) Future Outlook:\n   - Growing opportunities\n   - Digital transformation\n   - International collaboration\n   - Innovation potential"
                                    ],
                                    "hints": [
                                        "Consider successful startups",
                                        "Think about support systems",
                                        "Include challenges faced",
                                        "Consider future potential"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
